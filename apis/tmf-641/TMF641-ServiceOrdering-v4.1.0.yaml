---
openapi: 3.0.1
info:
  title: API ServiceOrdering
  description:
    "## TMF API Reference : TMF 641 - Service Ordering Management\n\n Version
    4.1 \n\nThe Service Order API provides a standardized mechanism for managing Service
    Order, a type of order which can be used to place an order between internal Customer
    Order management system to service order management system or between a service
    provider and a partner and vice versa.\n\n### Service Order resource\nA service
    order will describe a list of service order items.  A service order item references
    an action on an existing  or  future  service.  By  service  we  designed  Customer
    Facing  Service  (CFS)  as  well  as  Resource Facing Service (RFS).\nFrom a component
    perspective, a service order should be available\n- from a Service Orchestration
    Component (and it could mix CFS and RFS)\n- from an Infrastructure Control & Management
    component (and it would have only RFS)\n\n### TMF641 performs the following operations
    on service order resource :\n- Retrieval of a service order or a collection of
    service orders depending on filter criteria\n- Partial update of a service order
    (including updating rules)\n- Creation of a service order (including default values
    and creation rules)\n- Deletion of service order (for administration purposes)\n-
    Notification of events on Service order\n\n**Cancel Service Order resource**\n\nThis
    resource is used to request a service order cancellation.\n\n**TMF641 provides
    following operations on Cancel Service Order resource :**\n\n- Retrieval of a
    cancel service order or a collection of cancel service orders \n- Creation of
    a cancel service order \n- Notification of events on cancel service order.\n\nCopyright
    Â© TM Forum 2020. All Rights Reserved"
  version: 4.1.0
servers:
  - url: https://serverRoot/tmf-api/serviceOrdering/v4
tags:
  - name: serviceOrder
  - name: cancelServiceOrder
  - name: notification listeners (client side)
  - name: events subscription
paths:
  "/serviceOrder":
    get:
      tags:
        - serviceOrder
      summary: List or find ServiceOrder objects
      description: This operation list or find ServiceOrder entities
      operationId: listServiceOrder
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        "200":
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ServiceOrder"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      tags:
        - serviceOrder
      summary: Creates a ServiceOrder
      description: This operation creates a ServiceOrder entity.
      operationId: createServiceOrder
      requestBody:
        description: The ServiceOrder to be created
        content:
          application/json;charset=utf-8:
            schema:
              "$ref": "#/components/schemas/ServiceOrder_Create"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/ServiceOrder"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
      x-codegen-request-body-name: serviceOrder
  "/serviceOrder/{id}":
    get:
      tags:
        - serviceOrder
      summary: Retrieves a ServiceOrder by ID
      description:
        This operation retrieves a ServiceOrder entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrieveServiceOrder
      parameters:
        - name: id
          in: path
          description: Identifier of the ServiceOrder
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/ServiceOrder"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      tags:
        - serviceOrder
      summary: Deletes a ServiceOrder
      description: This operation deletes a ServiceOrder entity.
      operationId: deleteServiceOrder
      parameters:
        - name: id
          in: path
          description: Identifier of the ServiceOrder
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deleted
          content: {}
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
    patch:
      tags:
        - serviceOrder
      summary: Updates partially a ServiceOrder
      description: This operation updates partially a ServiceOrder entity.
      operationId: patchServiceOrder
      parameters:
        - name: id
          in: path
          description: Identifier of the ServiceOrder
          required: true
          schema:
            type: string
      requestBody:
        description: The ServiceOrder to be updated
        content:
          application/json;charset=utf-8:
            schema:
              "$ref": "#/components/schemas/ServiceOrder_Update"
        required: true
      responses:
        "200":
          description: Updated
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/ServiceOrder"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
      x-codegen-request-body-name: serviceOrder
  "/cancelServiceOrder":
    get:
      tags:
        - cancelServiceOrder
      summary: List or find CancelServiceOrder objects
      description: This operation list or find CancelServiceOrder entities
      operationId: listCancelServiceOrder
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        "200":
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CancelServiceOrder"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      tags:
        - cancelServiceOrder
      summary: Creates a CancelServiceOrder
      description: This operation creates a CancelServiceOrder entity.
      operationId: createCancelServiceOrder
      requestBody:
        description: The CancelServiceOrder to be created
        content:
          application/json;charset=utf-8:
            schema:
              "$ref": "#/components/schemas/CancelServiceOrder_Create"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/CancelServiceOrder"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
      x-codegen-request-body-name: cancelServiceOrder
  "/cancelServiceOrder/{id}":
    get:
      tags:
        - cancelServiceOrder
      summary: Retrieves a CancelServiceOrder by ID
      description:
        This operation retrieves a CancelServiceOrder entity. Attribute
        selection is enabled for all first level attributes.
      operationId: retrieveCancelServiceOrder
      parameters:
        - name: id
          in: path
          description: Identifier of the CancelServiceOrder
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/CancelServiceOrder"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
  "/hub":
    post:
      tags:
        - events subscription
      summary: Register a listener
      description:
        Sets the communication endpoint address the service instance must
        use to deliver information about its health state, execution state, failures
        and metrics.
      operationId: registerListener
      requestBody:
        description: Data containing the callback endpoint to deliver the information
        content:
          application/json;charset=utf-8:
            schema:
              "$ref": "#/components/schemas/EventSubscriptionInput"
        required: true
      responses:
        "201":
          description: Subscribed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/EventSubscription"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
      x-codegen-request-body-name: data
  "/hub/{id}":
    delete:
      tags:
        - events subscription
      summary: Unregister a listener
      description:
        Resets the communication endpoint address the service instance
        must use to deliver information about its health state, execution state, failures
        and metrics.
      operationId: unregisterListener
      parameters:
        - name: id
          in: path
          description: The id of the registered listener
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deleted
          content: {}
        "400":
          description: Bad request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
  "/listener/serviceOrderCreateEvent":
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ServiceOrderCreateEvent
      description: Example of a client listener for receiving the notification ServiceOrderCreateEvent
      operationId: listenToServiceOrderCreateEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              "$ref": "#/components/schemas/ServiceOrderCreateEvent"
        required: true
      responses:
        "201":
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/EventSubscription"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
      x-codegen-request-body-name: data
  "/listener/serviceOrderAttributeValueChangeEvent":
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ServiceOrderAttributeValueChangeEvent
      description: Example of a client listener for receiving the notification ServiceOrderAttributeValueChangeEvent
      operationId: listenToServiceOrderAttributeValueChangeEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              "$ref": "#/components/schemas/ServiceOrderAttributeValueChangeEvent"
        required: true
      responses:
        "201":
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/EventSubscription"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
      x-codegen-request-body-name: data
  "/listener/serviceOrderStateChangeEvent":
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ServiceOrderStateChangeEvent
      description: Example of a client listener for receiving the notification ServiceOrderStateChangeEvent
      operationId: listenToServiceOrderStateChangeEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              "$ref": "#/components/schemas/ServiceOrderStateChangeEvent"
        required: true
      responses:
        "201":
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/EventSubscription"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
      x-codegen-request-body-name: data
  "/listener/serviceOrderDeleteEvent":
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ServiceOrderDeleteEvent
      description: Example of a client listener for receiving the notification ServiceOrderDeleteEvent
      operationId: listenToServiceOrderDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              "$ref": "#/components/schemas/ServiceOrderDeleteEvent"
        required: true
      responses:
        "201":
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/EventSubscription"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
      x-codegen-request-body-name: data
  "/listener/serviceOrderInformationRequiredEvent":
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ServiceOrderInformationRequiredEvent
      description: Example of a client listener for receiving the notification ServiceOrderInformationRequiredEvent
      operationId: listenToServiceOrderInformationRequiredEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              "$ref": "#/components/schemas/ServiceOrderInformationRequiredEvent"
        required: true
      responses:
        "201":
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/EventSubscription"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
      x-codegen-request-body-name: data
  "/listener/serviceOrderMilestoneEvent":
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ServiceOrderMilestoneEvent
      description: Example of a client listener for receiving the notification ServiceOrderMilestoneEvent
      operationId: listenToServiceOrderMilestoneEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              "$ref": "#/components/schemas/ServiceOrderMilestoneEvent"
        required: true
      responses:
        "201":
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/EventSubscription"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
      x-codegen-request-body-name: data
  "/listener/serviceOrderJeopardyEvent":
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ServiceOrderJeopardyEvent
      description: Example of a client listener for receiving the notification ServiceOrderJeopardyEvent
      operationId: listenToServiceOrderJeopardyEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              "$ref": "#/components/schemas/ServiceOrderJeopardyEvent"
        required: true
      responses:
        "201":
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/EventSubscription"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
      x-codegen-request-body-name: data
  "/listener/cancelServiceOrderCreateEvent":
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity CancelServiceOrderCreateEvent
      description: Example of a client listener for receiving the notification CancelServiceOrderCreateEvent
      operationId: listenToCancelServiceOrderCreateEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              "$ref": "#/components/schemas/CancelServiceOrderCreateEvent"
        required: true
      responses:
        "201":
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/EventSubscription"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
      x-codegen-request-body-name: data
  "/listener/cancelServiceOrderStateChangeEvent":
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity CancelServiceOrderStateChangeEvent
      description: Example of a client listener for receiving the notification CancelServiceOrderStateChangeEvent
      operationId: listenToCancelServiceOrderStateChangeEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              "$ref": "#/components/schemas/CancelServiceOrderStateChangeEvent"
        required: true
      responses:
        "201":
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/EventSubscription"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
      x-codegen-request-body-name: data
  "/listener/cancelServiceOrderInformationRequiredEvent":
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity CancelServiceOrderInformationRequiredEvent
      description: Example of a client listener for receiving the notification CancelServiceOrderInformationRequiredEvent
      operationId: listenToCancelServiceOrderInformationRequiredEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              "$ref": "#/components/schemas/CancelServiceOrderInformationRequiredEvent"
        required: true
      responses:
        "201":
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/EventSubscription"
        "400":
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                "$ref": "#/components/schemas/Error"
      x-codegen-request-body-name: data
components:
  schemas:
    Addressable:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
      description: Base schema for adressable entities
    Any:
      type: object
    AppointmentRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: The identifier of the referred appointment
        href:
          type: string
          description: The reference of the appointment
        description:
          type: string
          description: An explanatory text regarding the appointment made with a party
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for disambiguation
      description:
        Refers an appointment, such as a Customer presentation or internal
        meeting or site visit
    CancelOrder:
      type: object
      properties:
        id:
          type: string
          description: id of the cancellation request (this is not an order id)
        href:
          type: string
          description: Hyperlink to access the cancellation request
        cancellationReason:
          type: string
          description: Reason why the order is cancelled.
        effectiveCancellationDate:
          type: string
          description: Date when the order is cancelled.
          format: date-time
        requestedCancellationDate:
          type: string
          description: Date when the submitter wants the order to be cancelled
          format: date-time
        state:
          "$ref": "#/components/schemas/TaskStateType"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description:
        A Order cancel is a type of task which  can  be used to place a
        request to cancel an order
    CancelServiceOrder:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        cancellationReason:
          type: string
          description: Reason why the order is cancelled.
        completionMessage:
          type: string
          description:
            an optional message describing the completion of the task if
            it is done as expected or it is denied for a reason (like order in an
            state of PoNR).
        effectiveCancellationDate:
          type: string
          description: Date when the order is cancelled.
          format: date-time
        requestedCancellationDate:
          type: string
          description: Date when the submitter wants the order to be cancelled
          format: date-time
        errorMessage:
          "$ref": "#/components/schemas/ErrorMessage"
        serviceOrder:
          "$ref": "#/components/schemas/ServiceOrderRef"
        state:
          "$ref": "#/components/schemas/TaskStateType"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Request for cancellation an existing Service order
    CancelServiceOrder_Create:
      required:
        - serviceOrder
      type: object
      properties:
        cancellationReason:
          type: string
          description: Reason why the order is cancelled.
        requestedCancellationDate:
          type: string
          description: Date when the submitter wants the order to be cancelled
          format: date-time
        serviceOrder:
          "$ref": "#/components/schemas/ServiceOrderRef"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        Request for cancellation an existing Service order
        Skipped properties: id,href,state,effectiveCancellationDate,completionMessage,errorMessage
    Characteristic:
      required:
        - name
        - value
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
        name:
          type: string
          description: Name of the characteristic
        valueType:
          type: string
          description: Data type of the value of the characteristic
        characteristicRelationship:
          type: array
          items:
            "$ref": "#/components/schemas/CharacteristicRelationship"
        value:
          "$ref": "#/components/schemas/Any"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description:
        Describes a given characteristic of an object or entity through
        a name/value pair.
    CharacteristicRelationship:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
        href:
          type: string
          description: Hyperlink reference
          format: uri
        relationshipType:
          type: string
          description: The type of relationship
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Another Characteristic that is related to the current Characteristic;
    ConstraintRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: constraint version
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description:
        Constraint reference. The Constraint resource represents a policy/rule
        applied to an entity or entity spec.
    Entity:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Base entity schema for use in TMForum Open-APIs
    EntityRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Entity reference schema to be use for all entityRef class.
    EntityValue:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Base entity value  schema for use in TMForum Open-APIs
    ErrorMessage:
      type: object
      properties:
        code:
          type: string
          description: error code
        message:
          type: string
          description: More details and corrective actions related to the error
        reason:
          type: string
          description: Explanation of the reason for the error
        referenceError:
          type: string
          description: URI of documentation describing the error
          format: uri
        status:
          type: string
          description: error code extension like sys-ABC-2001
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: represents an Error
    Extensible:
      type: object
      properties:
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Base Extensible schema for use in TMForum Open-APIs
    ExternalReference:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        externalReferenceType:
          type: string
          description: Type of the external reference
        name:
          type: string
          description: External reference name
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: External reference of the individual or reference in other system
    Feature:
      required:
        - featureCharacteristic
        - name
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the feature.
        isBundle:
          type: boolean
          description: True if this is a feature group. Default is false.
        isEnabled:
          type: boolean
          description: True if this feature is enabled. Default is true.
        name:
          type: string
          description: This is the name for the feature.
        constraint:
          type: array
          description: This is a list of feature constraints.
          items:
            "$ref": "#/components/schemas/ConstraintRef"
        featureCharacteristic:
          minItems: 1
          type: array
          description: This is a list of Characteristics for a particular feature.
          items:
            "$ref": "#/components/schemas/Characteristic"
        featureRelationship:
          type: array
          items:
            "$ref": "#/components/schemas/FeatureRelationship"
      description: Configuration feature.
    FeatureRelationship:
      required:
        - name
        - relationshipType
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the target feature.
        name:
          type: string
          description: This is the name of the target feature.
        relationshipType:
          type: string
          description: This is the type of the feature relationship.
        validFor:
          "$ref": "#/components/schemas/TimePeriod"
      description: Configuration feature
    JeopardyAlert:
      type: object
      properties:
        id:
          type: string
          description: identifier of the JeopardyAlert
        alertDate:
          type: string
          description: A date time( DateTime). The date that the alert issued
          format: date-time
        exception:
          type: string
          description: " The exception associated with this jeopardy alert"
        jeopardyType:
          type: string
          description:
            A string represents the type of jeopardy/risk like Normal,
            Hazard, Critical, ...
        message:
          type: string
          description: A string represents the message of the alert
        name:
          type: string
          description: A string used to give a name to the jeopardy alert
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description:
        A JeopardyAlert represents a predicted exception during a process
        that may cause a risk to complete successfully the process.
    Milestone:
      type: object
      properties:
        id:
          type: string
          description: identifier of the Milestone
        description:
          type: string
          description: free-text description of the Milestone
        message:
          type: string
          description: A string represents the message of the milestone
        milestoneDate:
          type: string
          description: A date time( DateTime). The date that the milestone happens
          format: date-time
        name:
          type: string
          description: A string used to give a name to the milestone
        status:
          type: string
          description: The milestone status
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description:
        Milestone represents an action or event marking a significant change
        or stage in a process like an order process.
    Note:
      required:
        - text
      type: object
      properties:
        id:
          type: string
          description: Identifier of the note within its containing entity
          example: ""
        author:
          type: string
          description: Author of the note
          example: ""
        date:
          type: string
          description: Date of the note
          format: date-time
        text:
          type: string
          description: Text of the note
          example: ""
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Extra information about a given entity
    OrderItemActionType:
      type: string
      description: action to be performed on the product
      enum:
        - add
        - modify
        - delete
        - noChange
    Place:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
        name:
          type: string
          description:
            A user-friendly name for the place, such as [Paris Store],
            [London Store], [Main Home]
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description:
        Place reference. Place defines the places where the products are
        sold or delivered.
    PlaceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description:
        Place reference. PlaceRef defines the placeRefs where the products
        are sold or delivered.
    RelatedEntityRefOrValue:
      required:
        - role
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description:
        A reference to an entity, where the type of the entity is not known
        in advance. A related entity defines a entity described by reference or by
        value linked to a specific entity. The polymorphic attributes @type, @schemaLocation
        & @referredType are related to the Entity and not the RelatedEntityRefOrValue
        class itself
    RelatedParty:
      required:
        - "@referredType"
        - "@type"
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description:
        Related Party reference. A related party defines party or party
        role linked to a specific entity.
    RelatedPlaceRefOrValue:
      required:
        - role
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
        name:
          type: string
          description:
            A user-friendly name for the place, such as [Paris Store],
            [London Store], [Main Home]
        role:
          type: string
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description:
        Related Entity reference. A related place defines a place described
        by reference or by value linked to a specific entity. The polymorphic attributes
        @type, @schemaLocation & @referredType are related to the place entity and
        not the RelatedPlaceRefOrValue class itself
    RelatedServiceOrderItem:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        itemId:
          type: string
          description: Identifier of the order item where the service was managed
        role:
          type: string
          description: role of the service order item for this service
        serviceOrderHref:
          type: string
          description: Reference of the related entity.
        serviceOrderId:
          type: string
          description: Unique identifier of a related entity.
        itemAction:
          "$ref": "#/components/schemas/OrderItemActionType"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description:
        RelatedServiceOrderItem (a ServiceOrder item) .The service order
        item which triggered service creation/change/termination.
    ResourceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    Service:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the service
        href:
          type: string
          description: Reference of the service
        category:
          type: string
          description: Is it a customer facing or resource facing service
        description:
          type: string
          description: Free-text description of the service
        endDate:
          type: string
          description: Date when the service ends
          format: date-time
        hasStarted:
          type: boolean
          description: If TRUE, this Service has already been started
        isBundle:
          type: boolean
          description:
            If true, the service is a ServiceBundle which regroup a service
            hierachy. If false, the service is a 'atomic' service (hierachy leaf).
        isServiceEnabled:
          type: boolean
          description:
            "If FALSE and hasStarted is FALSE, this particular Service
            has NOT been enabled for use - if FALSE and hasStarted is TRUE then the
            service has failed "
        isStateful:
          type: boolean
          description:
            If TRUE, this Service can be changed without affecting any
            other services
        name:
          type: string
          description: Name of the service
        serviceDate:
          type: string
          description: Date when the service was created (whatever its status).
        serviceType:
          type: string
          description: Business type of the service
        startDate:
          type: string
          description: Date when the service starts
          format: date-time
        startMode:
          type: string
          description:
            "This attribute is an enumerated integer that indicates how
            the Service is started, such as: 0: Unknown; 1: Automatically by the managed
            environment; 2: Automatically by the owning device; 3: Manually by the
            Provider of the Service; 4: Manually by a Customer of the Provider; 5:
            Any of the above"
        feature:
          type: array
          description: "A list of feature associated with this service "
          items:
            "$ref": "#/components/schemas/Feature"
        note:
          type: array
          description: A list of notes made on this service
          items:
            "$ref": "#/components/schemas/Note"
        place:
          type: array
          description:
            A list of places (Place [*]). Used to define a place useful
            for the service (for example a geographical place whre the service is
            installed)
          items:
            "$ref": "#/components/schemas/RelatedPlaceRefOrValue"
        relatedEntity:
          type: array
          description: "A list of related  entity in relationship with this service "
          items:
            "$ref": "#/components/schemas/RelatedEntityRefOrValue"
        relatedParty:
          type: array
          description:
            A list of related party references (RelatedParty [*]). A related
            party defines party or party role linked to a specific entity
          items:
            "$ref": "#/components/schemas/RelatedParty"
        serviceCharacteristic:
          type: array
          description:
            "A list of characteristics that characterize this service (ServiceCharacteristic
            [*]) "
          items:
            "$ref": "#/components/schemas/Characteristic"
        serviceOrderItem:
          type: array
          description: A list of service order items related to this service
          items:
            "$ref": "#/components/schemas/RelatedServiceOrderItem"
        serviceRelationship:
          type: array
          description:
            A list of service relationships (ServiceRelationship [*]).
            Describes links with other service(s) in the inventory.
          items:
            "$ref": "#/components/schemas/ServiceRelationship"
        serviceSpecification:
          "$ref": "#/components/schemas/ServiceSpecificationRef"
        state:
          "$ref": "#/components/schemas/ServiceStateType"
        supportingResource:
          type: array
          description:
            "A list of supporting resources (SupportingResource [*]).Note:
            only Service of type RFS can be associated with Resources"
          items:
            "$ref": "#/components/schemas/ResourceRef"
        supportingService:
          type: array
          description:
            A list of supporting services (SupportingService [*]). A collection
            of services that support this service (bundling, link CFS to RFS)
          items:
            "$ref": "#/components/schemas/ServiceRefOrValue"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description:
        "Service is a base class for defining the Service hierarchy. All
        Services are characterized as either being possibly visible and usable by
        a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService
        and ResourceFacingService."
    ServiceOrder:
      type: object
      properties:
        id:
          type: string
          description: ID created on repository side
        href:
          type: string
          description: Hyperlink to access the order
        cancellationDate:
          type: string
          description:
            "Date when the order is cancelled. This is used when order
            is cancelled. "
          format: date-time
        cancellationReason:
          type: string
          description:
            "Reason why the order is cancelled. This is used when order
            is cancelled. "
        category:
          type: string
          description:
            "Used to categorize the order, useful for the OM system, such
            as: Broadband, TVOption"
        completionDate:
          type: string
          description: Effective delivery date amended by the provider
          format: date-time
        description:
          type: string
          description: A free-text description of the service order
        expectedCompletionDate:
          type: string
          description: Expected delivery date amended by the provider
          format: date-time
        externalId:
          type: string
          description: ID given by the consumer to facilitate searches
        notificationContact:
          type: string
          description:
            Contact attached to the order to send back information regarding
            this order
        orderDate:
          type: string
          format: date-time
        priority:
          type: string
          description:
            Can be used by consumers to prioritize orders in a Service
            Order Management system
        requestedCompletionDate:
          type: string
          description: Requested delivery date from the requestors perspective
          format: date-time
        requestedStartDate:
          type: string
          description: Order start date wished by the requestor
          format: date-time
        startDate:
          type: string
          description: Date when the order was started for processing
          format: date-time
        errorMessage:
          type: array
          description: the error(s) cause an order status change
          items:
            "$ref": "#/components/schemas/ServiceOrderErrorMessage"
        externalReference:
          type: array
          items:
            "$ref": "#/components/schemas/ExternalReference"
        jeopardyAlert:
          type: array
          description: A list of jeopardy alerts related to this order
          items:
            "$ref": "#/components/schemas/ServiceOrderJeopardyAlert"
        milestone:
          type: array
          description: A list of milestones related to this order
          items:
            "$ref": "#/components/schemas/ServiceOrderMilestone"
        note:
          type: array
          description:
            Extra-information about the order; e.g. useful to add extra
            delivery information that could be useful for a human process
          items:
            "$ref": "#/components/schemas/Note"
        orderRelationship:
          type: array
          description:
            A list of service orders related to this order (e.g. prerequisite,
            dependent on)
          items:
            "$ref": "#/components/schemas/ServiceOrderRelationship"
        relatedParty:
          type: array
          description:
            A list of parties which are involved in this order and the
            role they are playing
          items:
            "$ref": "#/components/schemas/RelatedParty"
        serviceOrderItem:
          type: array
          description: A list of service order items to be processed by this order
          items:
            "$ref": "#/components/schemas/ServiceOrderItem"
        state:
          "$ref": "#/components/schemas/ServiceOrderStateType"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
    ServiceOrder_Create:
      required:
        - serviceOrderItem
      type: object
      properties:
        cancellationDate:
          type: string
          description:
            "Date when the order is cancelled. This is used when order
            is cancelled. "
          format: date-time
        cancellationReason:
          type: string
          description:
            "Reason why the order is cancelled. This is used when order
            is cancelled. "
        category:
          type: string
          description:
            "Used to categorize the order, useful for the OM system, such
            as: Broadband, TVOption"
        description:
          type: string
          description: A free-text description of the service order
        externalId:
          type: string
          description: ID given by the consumer to facilitate searches
        notificationContact:
          type: string
          description:
            Contact attached to the order to send back information regarding
            this order
        priority:
          type: string
          description:
            Can be used by consumers to prioritize orders in a Service
            Order Management system
        requestedCompletionDate:
          type: string
          description: Requested delivery date from the requestors perspective
          format: date-time
        requestedStartDate:
          type: string
          description: Order start date wished by the requestor
          format: date-time
        externalReference:
          type: array
          items:
            "$ref": "#/components/schemas/ExternalReference"
        note:
          type: array
          description:
            Extra-information about the order; e.g. useful to add extra
            delivery information that could be useful for a human process
          items:
            "$ref": "#/components/schemas/Note"
        orderRelationship:
          type: array
          description:
            A list of service orders related to this order (e.g. prerequisite,
            dependent on)
          items:
            "$ref": "#/components/schemas/ServiceOrderRelationship"
        relatedParty:
          type: array
          description:
            A list of parties which are involved in this order and the
            role they are playing
          items:
            "$ref": "#/components/schemas/RelatedParty"
        serviceOrderItem:
          minItems: 1
          type: array
          description: A list of service order items to be processed by this order
          items:
            "$ref": "#/components/schemas/ServiceOrderItem"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |2-

        Skipped properties: id,href,orderDate,completionDate,expectedCompletionDate,startDate,state,jeopardyAlert,errorMessage,milestone
    ServiceOrder_Update:
      type: object
      properties:
        description:
          type: string
          description: A free-text description of the service order
        expectedCompletionDate:
          type: string
          description: Expected delivery date amended by the provider
          format: date-time
        externalId:
          type: string
          description: ID given by the consumer to facilitate searches
        notificationContact:
          type: string
          description:
            Contact attached to the order to send back information regarding
            this order
        priority:
          type: string
          description:
            Can be used by consumers to prioritize orders in a Service
            Order Management system
        requestedCompletionDate:
          type: string
          description: Requested delivery date from the requestors perspective
          format: date-time
        requestedStartDate:
          type: string
          description: Order start date wished by the requestor
          format: date-time
        externalReference:
          type: array
          items:
            "$ref": "#/components/schemas/ExternalReference"
        note:
          type: array
          description:
            Extra-information about the order; e.g. useful to add extra
            delivery information that could be useful for a human process
          items:
            "$ref": "#/components/schemas/Note"
        orderRelationship:
          type: array
          description:
            A list of service orders related to this order (e.g. prerequisite,
            dependent on)
          items:
            "$ref": "#/components/schemas/ServiceOrderRelationship"
        relatedParty:
          type: array
          description:
            A list of parties which are involved in this order and the
            role they are playing
          items:
            "$ref": "#/components/schemas/RelatedParty"
        serviceOrderItem:
          type: array
          description: A list of service order items to be processed by this order
          items:
            "$ref": "#/components/schemas/ServiceOrderItem"
        state:
          "$ref": "#/components/schemas/ServiceOrderStateType"
      description: |2-

        Skipped properties: id,href,orderDate,jeopardyAlert,errorMessage,milestone,@baseType,@schemaLocation,@type,cancellationDate,cancellationReason,category,completionDate,startDate
    ServiceOrderErrorMessage:
      type: object
      properties:
        code:
          type: string
          description: error code
        message:
          type: string
          description: More details and corrective actions related to the error
        reason:
          type: string
          description: Explanation of the reason for the error
        referenceError:
          type: string
          description: URI of documentation describing the error
          format: uri
        status:
          type: string
          description: error code extension like sys-ABC-2001
        timestamp:
          type: string
          description: Date when the error happened
          format: date-time
        serviceOrderItem:
          type: array
          description: A list of order item references corresponded to this error
          items:
            "$ref": "#/components/schemas/ServiceOrderItemRef"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description:
        A ServiceOrderErrorMessage represents an error that causes a status
        change in a service order.
    ServiceOrderItem:
      required:
        - action
        - id
        - service
      type: object
      properties:
        id:
          type: string
          description: Identifier of the individual line item
        quantity:
          type: integer
          description: Quantity ordered
        action:
          "$ref": "#/components/schemas/OrderItemActionType"
        appointment:
          "$ref": "#/components/schemas/AppointmentRef"
        errorMessage:
          type: array
          description: the error(s) cause an order item status change
          items:
            "$ref": "#/components/schemas/ServiceOrderItemErrorMessage"
        service:
          "$ref": "#/components/schemas/ServiceRefOrValue"
        serviceOrderItem:
          type: array
          description: A list of order items embedded to this order item
          items:
            "$ref": "#/components/schemas/ServiceOrderItem"
        serviceOrderItemRelationship:
          type: array
          description: A list of order items related to this order item
          items:
            "$ref": "#/components/schemas/ServiceOrderItemRelationship"
        state:
          "$ref": "#/components/schemas/ServiceOrderItemStateType"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
    ServiceOrderItemErrorMessage:
      type: object
      properties:
        code:
          type: string
          description: error code
        message:
          type: string
          description: More details and corrective actions related to the error
        reason:
          type: string
          description: Explanation of the reason for the error
        referenceError:
          type: string
          description: URI of documentation describing the error
          format: uri
        status:
          type: string
          description: error code extension like sys-ABC-2001
        timestamp:
          type: string
          description: Date when the error happened
          format: date-time
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description:
        AServiceOrderItemErrorMessage represents an error that causes a
        status change in a service order item.
    ServiceOrderItemRef:
      type: object
      properties:
        itemId:
          type: string
          description: Identifier of the line item
        serviceOrderHref:
          type: string
          description: Link to the order to which this item belongs to
          format: uri
        serviceOrderId:
          type: string
          description: Identifier of the order that this item belongs to
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    ServiceOrderItemRelationship:
      type: object
      properties:
        relationshipType:
          type: string
          description:
            "The type of related order item, can be: dependency if the
            order item needs to be not started until another order item is complete"
        orderItem:
          "$ref": "#/components/schemas/ServiceOrderItemRef"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Linked service order item to the one containing this attribute
    ServiceOrderItemStateType:
      type: string
      description: Possible values for the state of the order item
      enum:
        - acknowledged
        - rejected
        - pending
        - held
        - inProgress
        - cancelled
        - completed
        - failed
        - assessingCancellation
        - pendingCancellation
        - partial
    ServiceOrderJeopardyAlert:
      type: object
      properties:
        id:
          type: string
          description: identifier of the JeopardyAlert
        alertDate:
          type: string
          description: A date time( DateTime). The date that the alert issued
          format: date-time
        exception:
          type: string
          description: " The exception associated with this jeopardy alert"
        jeopardyType:
          type: string
          description:
            A string represents the type of jeopardy/risk like Normal,
            Hazard, Critical, ...
        message:
          type: string
          description: A string represents the message of the alert
        name:
          type: string
          description: A string used to give a name to the jeopardy alert
        serviceOrderItem:
          type: array
          description: A list of order item references corresponded to this alert
          items:
            "$ref": "#/components/schemas/ServiceOrderItemRef"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description:
        A ServiceOrderJeopardyAlert represents a predicted exception during
        a service order processing that would brings risk to complete successfully
        the ordetr.
    ServiceOrderMilestone:
      type: object
      properties:
        id:
          type: string
          description: identifier of the Milestone
        description:
          type: string
          description: free-text description of the Milestone
        message:
          type: string
          description: A string represents the message of the milestone
        milestoneDate:
          type: string
          description: A date time( DateTime). The date that the milestone happens
          format: date-time
        name:
          type: string
          description: A string used to give a name to the milestone
        status:
          type: string
          description: The milestone status
        serviceOrderItem:
          type: array
          description: A list of order item references corresponded to this milestone
          items:
            "$ref": "#/components/schemas/ServiceOrderItemRef"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description:
        ServiceOrderMilestone represents an action or event marking a significant
        change or stage in processing of a service order.
    ServiceOrderRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related service order
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description:
        Service Order reference. Useful to understand the which was the
        Service order through which the service was instantiated in the service inventory
    ServiceOrderRelationship:
      required:
        - id
        - relationshipType
      type: object
      properties:
        id:
          type: string
          description: The id of the related order
        href:
          type: string
          description: A hyperlink to the related order
        relationshipType:
          type: string
          description:
            "The type of related order, such as: [dependency] if the order
            needs to be [not started] until another order item is complete (a service
            order in this case) or [cross-ref] to keep track of the source order (a
            productOrder)"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        "@referredType":
          type: string
          description: The entity type of the related order
      description: Linked service order to the one containing this attribute
    ServiceOrderStateType:
      type: string
      description: Possible values for the state of the order
      enum:
        - acknowledged
        - rejected
        - pending
        - held
        - inProgress
        - cancelled
        - completed
        - failed
        - partial
        - assessingCancellation
        - pendingCancellation
    ServiceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Service reference, for when Service is used by other entities
    ServiceRefOrValue:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the service
        href:
          type: string
          description: Reference of the service
        category:
          type: string
          description: Is it a customer facing or resource facing service
        description:
          type: string
          description: Free-text description of the service
        endDate:
          type: string
          description: Date when the service ends
          format: date-time
        hasStarted:
          type: boolean
          description: If TRUE, this Service has already been started
        isBundle:
          type: boolean
          description:
            If true, the service is a ServiceBundle which regroup a service
            hierachy. If false, the service is a 'atomic' service (hierachy leaf).
        isServiceEnabled:
          type: boolean
          description:
            "If FALSE and hasStarted is FALSE, this particular Service
            has NOT been enabled for use - if FALSE and hasStarted is TRUE then the
            service has failed "
        isStateful:
          type: boolean
          description:
            If TRUE, this Service can be changed without affecting any
            other services
        name:
          type: string
          description: Name of the service
        serviceDate:
          type: string
          description: Date when the service was created (whatever its status).
        serviceType:
          type: string
          description: Business type of the service
        startDate:
          type: string
          description: Date when the service starts
          format: date-time
        startMode:
          type: string
          description:
            "This attribute is an enumerated integer that indicates how
            the Service is started, such as: 0: Unknown; 1: Automatically by the managed
            environment; 2: Automatically by the owning device; 3: Manually by the
            Provider of the Service; 4: Manually by a Customer of the Provider; 5:
            Any of the above"
        feature:
          type: array
          description: "A list of feature associated with this service "
          items:
            "$ref": "#/components/schemas/Feature"
        note:
          type: array
          description: A list of notes made on this service
          items:
            "$ref": "#/components/schemas/Note"
        place:
          type: array
          description:
            A list of places (Place [*]). Used to define a place useful
            for the service (for example a geographical place whre the service is
            installed)
          items:
            "$ref": "#/components/schemas/RelatedPlaceRefOrValue"
        relatedEntity:
          type: array
          description: "A list of related  entity in relationship with this service "
          items:
            "$ref": "#/components/schemas/RelatedEntityRefOrValue"
        relatedParty:
          type: array
          description:
            A list of related party references (RelatedParty [*]). A related
            party defines party or party role linked to a specific entity
          items:
            "$ref": "#/components/schemas/RelatedParty"
        serviceCharacteristic:
          type: array
          description:
            "A list of characteristics that characterize this service (ServiceCharacteristic
            [*]) "
          items:
            "$ref": "#/components/schemas/Characteristic"
        serviceOrderItem:
          type: array
          description: A list of service order items related to this service
          items:
            "$ref": "#/components/schemas/RelatedServiceOrderItem"
        serviceRelationship:
          type: array
          description:
            A list of service relationships (ServiceRelationship [*]).
            Describes links with other service(s) in the inventory.
          items:
            "$ref": "#/components/schemas/ServiceRelationship"
        serviceSpecification:
          "$ref": "#/components/schemas/ServiceSpecificationRef"
        state:
          "$ref": "#/components/schemas/ServiceStateType"
        supportingResource:
          type: array
          description:
            "A list of supporting resources (SupportingResource [*]).Note:
            only Service of type RFS can be associated with Resources"
          items:
            "$ref": "#/components/schemas/ResourceRef"
        supportingService:
          type: array
          description:
            A list of supporting services (SupportingService [*]). A collection
            of services that support this service (bundling, link CFS to RFS)
          items:
            "$ref": "#/components/schemas/ServiceRefOrValue"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description:
        A Service to be created defined by value or existing defined by
        reference. The polymorphic attributes @type, @schemaLocation & @referredType
        are related to the Service entity and not the RelatedServiceRefOrValue class
        itself
    ServiceRelationship:
      required:
        - relationshipType
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        relationshipType:
          type: string
        service:
          "$ref": "#/components/schemas/ServiceRefOrValue"
        serviceRelationshipCharacteristic:
          type: array
          items:
            "$ref": "#/components/schemas/Characteristic"
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
    ServiceSpecificationRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: Service specification version
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description:
        "Service specification reference: ServiceSpecification(s) required
        to realize a ProductSpecification."
    ServiceStateType:
      type: string
      description: Valid values for the lifecycle state of the service
      enum:
        - feasibilityChecked
        - designed
        - reserved
        - inactive
        - active
        - terminated
    TaskStateType:
      type: string
      description: Possible values for the state of a task
      enum:
        - accepted
        - terminatedWithError
        - inProgress
        - done
    TimePeriod:
      type: object
      properties:
        endDateTime:
          type: string
          description: End of the time period, using IETC-RFC-3339 format
          format: date-time
          example: "1985-04-12T23:20:50.52Z"
        startDateTime:
          type: string
          description: Start of the time period, using IETC-RFC-3339 format
          format: date-time
          example: "1985-04-12T23:20:50.52Z"
      description:
        A period of time, either as a deadline (endDateTime only) a startDateTime
        only, or both
    EventSubscription:
      required:
        - callback
        - id
      type: object
      properties:
        id:
          type: string
          description: Id of the listener
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description:
        Sets the communication endpoint address the service instance must
        use to deliver notification information
    EventSubscriptionInput:
      required:
        - callback
      type: object
      properties:
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description:
        Sets the communication endpoint address the service instance must
        use to deliver notification information
    ServiceOrderCreateEvent:
      type: object
      properties:
        event:
          "$ref": "#/components/schemas/ServiceOrderCreateEventPayload"
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    ServiceOrderCreateEventPayload:
      type: object
      properties:
        serviceOrder:
          "$ref": "#/components/schemas/ServiceOrder"
      description: The event data structure
    ServiceOrderAttributeValueChangeEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          "$ref": "#/components/schemas/ServiceOrderAttributeValueChangeEventPayload"
      description: The notification data structure
    ServiceOrderAttributeValueChangeEventPayload:
      type: object
      properties:
        serviceOrder:
          "$ref": "#/components/schemas/ServiceOrder"
      description: The event data structure
    ServiceOrderStateChangeEvent:
      type: object
      properties:
        event:
          "$ref": "#/components/schemas/ServiceOrderStateChangeEventPayload"
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    ServiceOrderStateChangeEventPayload:
      type: object
      properties:
        serviceOrder:
          "$ref": "#/components/schemas/ServiceOrder"
      description: The event data structure
    ServiceOrderDeleteEvent:
      type: object
      properties:
        event:
          "$ref": "#/components/schemas/ServiceOrderDeleteEventPayload"
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    ServiceOrderDeleteEventPayload:
      type: object
      properties:
        serviceOrder:
          "$ref": "#/components/schemas/ServiceOrder"
      description: The event data structure
    ServiceOrderInformationRequiredEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          "$ref": "#/components/schemas/ServiceOrderInformationRequiredEventPayload"
      description: The notification data structure
    ServiceOrderInformationRequiredEventPayload:
      type: object
      properties:
        serviceOrder:
          "$ref": "#/components/schemas/ServiceOrder"
      description: The event data structure
    ServiceOrderMilestoneEvent:
      type: object
      properties:
        event:
          "$ref": "#/components/schemas/ServiceOrderMilestoneEventPayload"
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    ServiceOrderMilestoneEventPayload:
      type: object
      properties:
        serviceOrder:
          "$ref": "#/components/schemas/ServiceOrder"
      description: The event data structure
    ServiceOrderJeopardyEvent:
      type: object
      properties:
        event:
          "$ref": "#/components/schemas/ServiceOrderJeopardyEventPayload"
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    ServiceOrderJeopardyEventPayload:
      type: object
      properties:
        serviceOrder:
          "$ref": "#/components/schemas/ServiceOrder"
      description: The event data structure
    CancelServiceOrderCreateEvent:
      type: object
      properties:
        event:
          "$ref": "#/components/schemas/CancelServiceOrderCreateEventPayload"
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    CancelServiceOrderCreateEventPayload:
      type: object
      properties:
        cancelServiceOrder:
          "$ref": "#/components/schemas/CancelServiceOrder"
      description: The event data structure
    CancelServiceOrderStateChangeEvent:
      type: object
      properties:
        event:
          "$ref": "#/components/schemas/CancelServiceOrderStateChangeEventPayload"
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    CancelServiceOrderStateChangeEventPayload:
      type: object
      properties:
        cancelServiceOrder:
          "$ref": "#/components/schemas/CancelServiceOrder"
      description: The event data structure
    CancelServiceOrderInformationRequiredEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          "$ref": "#/components/schemas/CancelServiceOrderInformationRequiredEventPayload"
      description: The notification data structure
    CancelServiceOrderInformationRequiredEventPayload:
      type: object
      properties:
        cancelServiceOrder:
          "$ref": "#/components/schemas/CancelServiceOrder"
      description: The event data structure
    Error:
      required:
        - code
        - reason
      type: object
      properties:
        code:
          type: string
          description:
            Application relevant detail, defined in the API or a common
            list.
        reason:
          type: string
          description:
            Explanation of the reason for the error which can be shown
            to a client user.
        message:
          type: string
          description:
            More details and corrective actions related to the error which
            can be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          description: URI of documentation describing the error.
          format: uri
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class.
        "@schemaLocation":
          type: string
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class entity name.
      description:
        Used when an API throws an Error, typically with a HTTP error response-code
        (3xx, 4xx, 5xx)
x-original-swagger-version: "2.0"
